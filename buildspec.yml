version: 0.2 
env:
  variables:
    S3_BUCKET: ros-cicd-bucket
    APP_NAME: cicd
    CACHE_DIR: cache
    ROBOT_WS: robot_ws
    SIMULATION_WS: simulation_ws
    ROS_VERSION: melodic
    ROBOTAPP: robomaker-cicd-project-robot-app
    SIMAPP: robomaker-cicd-project-sim-app
    ACCOUNT: 498889106520
    REGION: us-east-1
    ECRURI: 498889106520.dkr.ecr.us-east-1.amazonaws.com
    ROBOTAPPARN: arn:aws:robomaker:us-east-1:498889106520:robot-application/robomaker-cicd-project-robot-app/1672664467753
    SIMAPPARN: arn:aws:robomaker:us-east-1:498889106520:simulation-application/robomaker-cicd-project-sim-app/1672664500263
    
phases: 
  install: 
    commands: 
       - apt-get update
       - apt-get install -y python3-pip python3-apt apt-transport-https ca-certificates wget
       - wget http://packages.osrfoundation.org/gazebo.key 
       - apt-key add gazebo.key
       - echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list
       - apt-get update
       - pip3 install -U setuptools pip
       - pip3 install colcon-ros-bundle
       - pip3 install awscli
       - pip3 install boto3
       - sudo pip3 install vcstool
  pre_build:
    commands:
      - vcs import robot_ws < ./$ROBOT_WS/.rosinstall
      - vcs import simulation_ws < ./$SIMULATION_WS/.rosinstall
  build: 
    commands: 
      - sudo docker system prune -a -f
      - sudo DOCKER_BUILDKIT=1 docker build . --build-arg ROS_DISTRO=$ROS_VERSION --build-arg LOCAL_WS_DIR=./$ROBOT_WS --build-arg APP_NAME=$ROBOTAPP -t $ROBOTAPP
      - sudo DOCKER_BUILDKIT=1 docker build . --build-arg GAZEBO_VERSION=gazebo-9 --build-arg ROS_DISTRO=$ROS_VERSION --build-arg LOCAL_WS_DIR=./$SIMULATION_WS --build-arg APP_NAME=$SIMAPP -t $SIMAPP
  post_build: 
    commands:
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECRURI
      - aws ecr delete-repository --repository-name $ROBOTAPP --force
      - aws ecr delete-repository --repository-name $SIMAPP --force
      - aws ecr create-repository --repository-name $ROBOTAPP
      - aws ecr create-repository --repository-name $SIMAPP
      - sudo docker tag $ROBOTAPP $ECRURI/$ROBOTAPP:latest
      - sudo docker tag $SIMAPP $ECRURI/$SIMAPP:latest
      - sudo docker push $ECRURI/$ROBOTAPP
      - sudo docker push $ECRURI/$SIMAPP
      - aws robomaker update-robot-application --application $ROBOTAPPARN --robot-software-suite name=General --environment uri=$ECRURI/$ROBOTAPP:latest
      - aws robomaker update-simulation-application --application $SIMAPPARN --robot-software-suite name=General --simulation-software-suite name=SimulationRuntime --environment uri=$ECRURI/$SIMAPP:latest
cache:
  paths:
    - '$CACHE_DIR/**/*'
    - '$ROBOT_WS/src/deps/**/*'
    - '$SIMULATION_WS/src/deps/**/*'
    
